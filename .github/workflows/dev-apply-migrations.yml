name: Apply DB Migrations

on:
  push:
    branches:
      - dev
env:
  POSTGRES_SERVER: ${{ secrets.POSTGRES_SERVER }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{secrets.AWS_REGION}}



jobs:
  apply-migrations:
    runs-on: self-hosted
    environment: DEV

    steps:
    - uses: actions/checkout@v2
    - name: Find python3.10 path
      run: |
        which python3.10

    - name: Set up Python
      run: |
        PYTHON_PATH=$(which python3.10)
        sudo ln -sf $PYTHON_PATH /usr/bin/python
        python --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install alembic sqlalchemy psycopg2-binary sqlmodel

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{env.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key : ${{ env.AWS_SECRET_ACCESS_KEY}}
        aws-region: ${{env.AWS_REGION}}

    - name: Run Alembic migrations
      run: |
        cd backend
        echo "Current directory:"
        pwd
        echo "Directory contents:"
        ls -R
        echo "PYTHONPATH:"
        echo $PYTHONPATH
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        alembic upgrade head
    - name: Verify migration
      env:
        PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
      run: |
        psql -h ${{ env.POSTGRES_SERVER }} -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }} -c "SELECT version_num FROM alembic_version;"
